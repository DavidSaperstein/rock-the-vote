[{"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\index.js":"1","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\App.js":"2","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\context\\IssueProvider.js":"3","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\context\\UserProvider.js":"4","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Auth.js":"5","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\PostList.js":"6","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\PostForm.js":"7","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Navbar.js":"8","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Post.js":"9","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Profile.js":"10","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\AuthForm.js":"11","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Comment.js":"12","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\CommentForm.js":"13"},{"size":480,"mtime":1642039719431,"results":"14","hashOfConfig":"15"},{"size":1380,"mtime":1642039582454,"results":"16","hashOfConfig":"15"},{"size":2199,"mtime":1640289295090,"results":"17","hashOfConfig":"15"},{"size":2836,"mtime":1642039713521,"results":"18","hashOfConfig":"15"},{"size":1607,"mtime":1640289295075,"results":"19","hashOfConfig":"15"},{"size":2587,"mtime":1642038050640,"results":"20","hashOfConfig":"15"},{"size":2283,"mtime":1640289295085,"results":"21","hashOfConfig":"15"},{"size":657,"mtime":1640289295081,"results":"22","hashOfConfig":"15"},{"size":1509,"mtime":1640289295083,"results":"23","hashOfConfig":"15"},{"size":446,"mtime":1640289295088,"results":"24","hashOfConfig":"15"},{"size":755,"mtime":1640289295076,"results":"25","hashOfConfig":"15"},{"size":221,"mtime":1640289295077,"results":"26","hashOfConfig":"15"},{"size":1056,"mtime":1640289295079,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"q51rdq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\index.js",[],["61","62"],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\App.js",["63"],"import React, { useContext } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Navbar from './components/Navbar.js'\r\nimport Auth from './components/Auth.js'\r\nimport Profile from './components/Profile.js'\r\nimport PostList from './components/PostList.js'\r\nimport PostForm from './components/PostForm.js'\r\nimport Post from './components/Post.js'\r\nimport { UserContext } from './context/UserProvider.js'\r\nimport { IssueContext } from './context/IssueProvider.js'\r\n\r\n\r\nexport default function App(){\r\n  const { user, token, logout, login, signup, addIssue } = useContext(UserContext)\r\n  const { getIssues } = useContext(IssueContext)\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar logout={logout}/>\r\n      <Switch>\r\n        <Route\r\n          exact path=\"/\"\r\n          render={() => token ? <Redirect to=\"/issues\"/> : <Auth login={login} signup={signup}/>}\r\n        />\r\n        <Route\r\n          path=\"/profile\"\r\n          render={() => <Profile username={user.username}/>}\r\n        />\r\n        <Route\r\n          exact path=\"/issues\"\r\n          render={() => <PostList />}\r\n        />\r\n        <Route\r\n          path=\"/newissue\"\r\n          render={() => <PostForm addIssue={addIssue} />}\r\n        />\r\n        <Route\r\n          path=\"/issues/:issueId\"\r\n          render={() => <Post />}\r\n        />\r\n      </Switch>\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\context\\IssueProvider.js",["64","65","66","67"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from './UserProvider.js'\r\n\r\nexport const IssueContext = React.createContext()\r\n\r\nexport default function IssueProvider(props){\r\n\r\n\r\n  const [issueState, setIssueState] = useState([])\r\n  const [currentIssue, setCurrentIssue] = useState({})\r\n  const [commentState, setCommentState] = useState([])\r\n  const { userAxios, user, userState, setUserState, getUserIssues } = useContext(UserContext)\r\n\r\n  function getIssues(){\r\n    userAxios.get(\"/api/issue\")\r\n      .then(res => {\r\n        const newState = res.data\r\n        newState.sort((a, b ) => b.score - a.score )\r\n        setIssueState(newState)\r\n        getUserIssues()\r\n      })\r\n      .catch(err => console.log(err.response.data.errMsg))\r\n  }\r\n\r\n  function getIssueById(id){\r\n    userAxios.get(`/api/issue/${id}`)\r\n      .then(res => {\r\n        setCurrentIssue(res.data)\r\n      })\r\n      .catch(err => console.log(err.response.data.errMsg))\r\n  }\r\n\r\n  function editIssue(updates, id) {\r\n    userAxios.put(`/api/issue/${id}`, updates)\r\n      .then(res => {\r\n        console.log(updates)\r\n        console.log(res.data)\r\n        setIssueState(prevState => (\r\n          prevState.map(issue => issue._id !== id ? issue : res.data)\r\n        ))\r\n      })\r\n      .catch(err => console.error(err))\r\n  }\r\n\r\n  function addComment(newComment, id) {\r\n    userAxios.post(`/api/comment/${id}`, newComment)\r\n    .then(res => {\r\n      setCommentState(prevState => [...prevState, res.data])\r\n    })\r\n    .catch(err => console.log(err.response.data.errMsg))\r\n  }\r\n\r\n  function getComments(id) {\r\n    userAxios.get(`/api/comment/${id}`)\r\n    .then(res => {\r\n      setCommentState(res.data)\r\n    })\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   getIssues()\r\n  // }, [])\r\n\r\n\r\n  return (\r\n    <IssueContext.Provider \r\n      value={{\r\n        issueState,\r\n        setIssueState,\r\n        currentIssue,\r\n        setCurrentIssue,\r\n        getIssues,\r\n        getIssueById,\r\n        editIssue,\r\n        addComment,\r\n        getComments,\r\n        commentState,\r\n        setCommentState\r\n      }}>\r\n      {props.children}\r\n    </IssueContext.Provider>\r\n  )\r\n}","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\context\\UserProvider.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Auth.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\PostList.js",["68","69"],"import React, { useContext, useEffect } from 'react'\r\nimport { IssueContext } from '../context/IssueProvider.js'\r\nimport { UserContext } from '../context/UserProvider.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PostList(props){\r\n\r\n  const { getIssues, getComments, issueState, editIssue } = useContext(IssueContext)\r\n  const { user } = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    getIssues()\r\n  }, [])\r\n\r\n  //functional, but score is bugged if you mash the button.\r\n  //possible fix disabling button until res.data comes back?\r\n  const handleUpvote = (issue) => {\r\n    const {_id, upvotes, downvotes} = issue\r\n    if(upvotes.includes(user._id)) {\r\n      issue.upvotes = upvotes.filter(voter => voter !== user._id)\r\n      issue.score--\r\n      editIssue(issue, _id )\r\n    } else {\r\n      if(downvotes.includes(user._id)) {\r\n        issue.downvotes = downvotes.filter(voter => voter !== user._id)\r\n        issue.score++\r\n      }\r\n      issue.upvotes.push(user._id)\r\n      issue.score++\r\n      console.log(issue)\r\n      editIssue(issue , _id )\r\n    }\r\n  }\r\n\r\n  const handleDownvote = (issue) => {\r\n    const {_id, upvotes, downvotes} = issue\r\n    if(downvotes.includes(user._id)) {\r\n      const updatedIssue = {...issue}\r\n      const newArray = downvotes.filter(voter => voter !== user._id)\r\n      updatedIssue.downvotes = newArray\r\n      updatedIssue.score++\r\n      editIssue(updatedIssue, _id )\r\n    } else {\r\n      const updatedIssue = {...issue}\r\n      if(upvotes.includes(user._id)) {\r\n        const newArray = upvotes.filter(voter => voter !== user._id)\r\n        updatedIssue.upvotes = newArray\r\n        updatedIssue.score--\r\n      }\r\n      updatedIssue.downvotes.push(user._id)\r\n      updatedIssue.score--\r\n      console.log(updatedIssue)\r\n      editIssue(updatedIssue , _id )\r\n    }\r\n  }\r\n\r\n  const linkStyle = {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n    paddingLeft: '20px',\r\n    backgroundColor: 'rgb(26, 26, 27)'\r\n  }\r\n\r\n  return(\r\n    <ul className='issue-container'>\r\n      {issueState.map(issue => {\r\n        console.log(issue)\r\n        return(\r\n          <li className='list-container'>\r\n            <div className='vote-container'>\r\n              <p onClick={() => handleUpvote(issue)}>/\\</p>\r\n              <h2>{issue.score}</h2>\r\n              <p onClick={() => handleDownvote(issue)}>\\/</p>\r\n            </div>\r\n            <Link \r\n              to={`/issues/${issue._id}`} \r\n              style={linkStyle}\r\n            >\r\n              {issue.title}\r\n            </Link>\r\n          </li> )}\r\n        )}\r\n    </ul>\r\n  )\r\n}","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\PostForm.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Navbar.js",["70"],"import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props){\r\n  const { logout } = props\r\n  const token = localStorage.getItem(\"token\")\r\n\r\n  const linkStyles = {\r\n    textDecoration: 'none',\r\n    fontSize: 'calc(10px + 1vw)'\r\n  }\r\n\r\n  return (\r\n    <div className='navbar'>\r\n      <Link to =\"/profile\" style={linkStyles}>Profile</Link>\r\n      <Link to =\"/issues\" style={linkStyles}>All Issues</Link>\r\n      <Link to =\"/newIssue\" style={linkStyles}>Create New Issue</Link>\r\n      { token &&\r\n        <Link to =\"/\" onClick={logout} style={linkStyles}>Logout</Link>\r\n      }\r\n    </div>\r\n  )\r\n}","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Post.js",["71","72","73","74"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Comment from './Comment.js'\r\nimport CommentForm from './CommentForm.js'\r\nimport { IssueContext } from '../context/IssueProvider.js'\r\n\r\nexport default function Post(props){\r\n\r\n  const { issueId } = useParams()\r\n\r\n  const { currentIssue, getIssueById, issueState, commentState, getComments} = useContext(IssueContext)\r\n\r\n  // const title = issueState.find(issue => issue._id === issueId).title\r\n  // const description = issueState.find(issue => issue._id === issueId).description\r\n\r\n  useEffect(() => {\r\n    getIssueById(issueId)\r\n    getComments(issueId)\r\n  }, [])\r\n\r\n  console.log(currentIssue.imgUrl)\r\n\r\n  return (\r\n    <div className='post-page-container'>\r\n      <div className=\"post-container\">\r\n        <h2 style={{\r\n          marginBottom: '20px', \r\n          border: 'solid rgb(100, 100, 102) 1px'\r\n        }}>\r\n          {currentIssue.title}\r\n        </h2>\r\n        {currentIssue?.imgUrl && \r\n          <img \r\n            src={currentIssue.imgUrl} \r\n            style={{marginBottom: '20px', border: 'solid rgb(100, 100, 102) 1px'}}\r\n          />}\r\n        <p style={{marginBottom: '20px'}}>{currentIssue.description}</p>\r\n      </div>\r\n      <CommentForm id={issueId}/>\r\n      {commentState.map(comment => {\r\n        return (\r\n        <Comment\r\n          description={comment.description}\r\n          username={comment.username}\r\n        />\r\n        )\r\n      })}\r\n    </div>\r\n\r\n  )\r\n}","C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Profile.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\AuthForm.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\Comment.js",[],"C:\\Users\\dhsap\\Desktop\\dev\\rock-the-vote\\client\\src\\components\\CommentForm.js",[],["75","76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":11,"nodeType":"83","messageId":"84","endLine":15,"endColumn":20},{"ruleId":"81","severity":1,"message":"85","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"86","line":12,"column":22,"nodeType":"83","messageId":"84","endLine":12,"endColumn":26},{"ruleId":"81","severity":1,"message":"87","line":12,"column":28,"nodeType":"83","messageId":"84","endLine":12,"endColumn":37},{"ruleId":"81","severity":1,"message":"88","line":12,"column":39,"nodeType":"83","messageId":"84","endLine":12,"endColumn":51},{"ruleId":"81","severity":1,"message":"89","line":8,"column":22,"nodeType":"83","messageId":"84","endLine":8,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":13,"column":6,"nodeType":"92","endLine":13,"endColumn":8,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"94","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":27},{"ruleId":"81","severity":1,"message":"95","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"96","line":11,"column":39,"nodeType":"83","messageId":"84","endLine":11,"endColumn":49},{"ruleId":"90","severity":1,"message":"97","line":19,"column":6,"nodeType":"92","endLine":19,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":11,"nodeType":"101","endLine":36,"endColumn":13},{"ruleId":"77","replacedBy":"102"},{"ruleId":"79","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'getIssues' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'userState' is assigned a value but never used.","'setUserState' is assigned a value but never used.","'getComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIssues'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'useContext' is defined but never used.","'useState' is defined but never used.","'issueState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getComments', 'getIssueById', and 'issueId'. Either include them or remove the dependency array.",["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [getIssues]",{"range":"112","text":"113"},"Update the dependencies array to be: [getComments, getIssueById, issueId]",{"range":"114","text":"115"},[434,436],"[getIssues]",[677,679],"[getComments, getIssueById, issueId]"]